name: test

on:
  schedule:
    - cron: '0 4 * * *'
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 300

    env:
      https_proxy: ${{ secrets.HTTPS_PROXY }}
      http_proxy: ${{ secrets.HTTP_PROXY }}
      socks_proxy: ${{ secrets.SOCKS5_PROXY }}
      no_proxy: localhost,127.0.0.1,::1
      preferred_proxy: ${{ secrets.PREFERRED_PROXY }}
      REPO_URL_ONE: ${{ secrets.REPO_URL_ONE }}
      REPO_URL_TWO: ${{ secrets.REPO_URL_TWO }}
      REPO_URL_THREE: ${{ secrets.REPO_URL_THREE }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      
      - name: Check and use preferred proxy
        run: |
          function check_proxy {
            local proxy_type=$1
            local proxy_value=$2
            if [ -n "$proxy_value" ]; then
              if curl -s --proxy $proxy_value https://www.google.com -o /dev/null; then
                echo "$proxy_type proxy is working"
                echo "Using $proxy_type proxy"
                curl -s --proxy $proxy_value https://ipinfo.io | jq
                export PROXY=$proxy_value
                export PROXY_TYPE=$proxy_type
                return 0
              else
                echo "$proxy_type proxy failed"
                return 1
              fi
            fi
            return 1
          }

          if [ "$preferred_proxy" == "http" ]; then
            check_proxy "http" $http_proxy || check_proxy "https" $https_proxy || check_proxy "socks5" $socks_proxy
          elif [ "$preferred_proxy" == "https" ]; then
            check_proxy "https" $https_proxy || check_proxy "http" $http_proxy || check_proxy "socks5" $socks_proxy
          elif [ "$preferred_proxy" == "socks5" ]; then
            check_proxy "socks5" $socks_proxy || check_proxy "http" $http_proxy || check_proxy "https" $https_proxy
          else
            check_proxy "http" $http_proxy || check_proxy "https" $https_proxy || check_proxy "socks5" $socks_proxy
          fi

          if [ -z "$PROXY" ]; then
            echo "No working proxy found"
            exit 1
          fi

      - name: Create app directory
        run: mkdir -p $(pwd)/app

      - name: Set permissions for app directory
        run: chmod 777 $(pwd)/app

      - name: Clone repositories
        run: |
          git clone $REPO_URL_ONE
          sleep 5
          git clone $REPO_URL_TWO
          sleep 5

      - name: Change permissions for cloned directories
        run: |
          chmod 777 0002-of-one
          chmod 777 kfcvarteacobita
          sleep 5

      - name: Move files and clean up for 0001-of-one
        run: |
          cd 0002-of-one
          mkdir -p $(pwd)/../app
          mv * $(pwd)/../app/
          cd ..
          rm -fr 0002-of-one
          sleep 5

      - name: Move files and clean up for kfcvarteacobita
        run: |
          cd kfcvarteacobita
          mkdir -p $(pwd)/../app
          mv * $(pwd)/../app/
          cd ..
          rm -fr kfcvarteacobita
          sleep 5


      - name: Change permissions for all files in /app
        run: chmod 777 $(pwd)/app/*

      - name: Display /app directory path
        run: |
          echo "The /app directory is located at: $(pwd)/app"

      - name: Execute the entry script with proxy
        run: |
          export http_proxy=${{ secrets.HTTP_PROXY }}
          export https_proxy=${{ secrets.HTTPS_PROXY }}
          export socks_proxy=${{ secrets.SOCKS5_PROXY }}
          export no_proxy=localhost,127.0.0.1,::1
          cd $(pwd)/app
          bash entryone.sh
